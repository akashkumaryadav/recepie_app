name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment variables
      run: |
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

    - name: Install SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add Host to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo SSH Connection Successful"

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ./recepie_app
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "EMAIL_USER=${{secrets.EMAIL_USER}}" >> .env
          echo "EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}}" >> .env
          docker-compose down
          docker-compose pull
          docker-compose up -d
        EOF
